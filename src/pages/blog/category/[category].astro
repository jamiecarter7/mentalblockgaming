---
import type { CollectionEntry } from "astro:content";
import { getCollection } from "astro:content";
import BlogLayout from "../../../layouts/BlogLayout.astro";
import Container from "../../../components/Container.astro";
import { formatCategory } from "../../../utils/formatCategory";
import { formatList } from "astro/dist/runtime/server/render/util";

const { category } = Astro.params

export async function getStaticPaths() {
  const blogPosts = await getCollection("blog", ({ data, slug }) => {
    return data.date < new Date();
  });
  return blogPosts.map((post) => ({
    params: {
      category: post.data.category[0],
      slug: post.slug
    },
    props: { post },
  }));
}


const blogPosts = await getCollection("blog", ({ data }) => {
  return data.date < new Date();
});
const posts = [...new Set(blogPosts.map((post) => post).filter((post) => post.data.category.includes(category)).flat())];
console.log(posts);




interface Props {
  post: CollectionEntry<"blog">;
}
const { post } = Astro.props;
console.log(post);
---
<BlogLayout title={formatCategory(category) + 'blog posts'}>
  <section>
      <p class="flex gap-6 text-neutral-400 mt-12 mx-10">
        <a href="/blog">Blog</a> > <span>{formatCategory(category)}</span>
      </p>
    <Container>
      <h1 class="text-5xl text-neutral-600 mb-6">Blog: '{formatCategory(category)}'</h1>
      <p>Read about what we learned making games with our articles on '{formatCategory(category)}'..</p>
      {
        posts.map((post) => (
          <article class="group my-16">
            <a
              class="rounded-lg text-red-500"
              href={`/blog/${post.data.category[0]}/${post.slug}`}
            >
              <h2 class="relative min-h-[60px] flex items-center mb-6 group-hover:text-white duration-200 ease-out text-3xl">
                <span class="absolute -z-10 top-0 -left-10 group-hover:-left-0 block w-2 group-hover:w-full duration-200 bg-red-600 h-full scale-y-125 group-hover:scale-x-105" />
                {post.data.title}
              </h2>
              <p>{post.data.exerpt}</p>
              <div class="flex justify-between">
                {
                  post.data.category.map((category) => 
                  // 1
                    <a class="text-neutral-400 hover:text-red-500 hover:bg-red-100" href={`/blog/category/` + category.toLowerCase()}>{formatCategory(category)}</a>
                  )
                }
                <p class="text-red-600 text-right ">continue reading..</p>
              </div>
            </a>

          </article>
        ))
      }
      </Container>
      </section>
</BlogLayout>

